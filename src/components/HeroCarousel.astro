---
const slides = [
  {
    title: "Exámen para licencia de conducción",
    description: "Evaluaciones médicas y psicológicas para la obtención de licencias de conducción",
    link: "/servicios/licencia-conduccion",
    image: "/images/licencia-conduccion.webp",
    alt: "Profesional realizando examen médico para licencia de conducción",
    metaDescription: "Realizamos exámenes médicos y psicológicos para la obtención de licencias de conducción con los más altos estándares de calidad."
  },
  {
    title: "Exámenes para seguridad vial",
    description: "Evaluaciones especializadas para garantizar la seguridad en la vía",
    link: "/servicios/seguridad-vial",
    image: "/images/seguridad-vial.webp",
    alt: "Profesional realizando evaluación de seguridad vial",
    metaDescription: "Nuestros exámenes de seguridad vial garantizan que los conductores cumplan con todos los requisitos de seguridad necesarios."
  },
  {
    title: "Exámen médico escolar",
    description: "Evaluaciones médicas especializadas para estudiantes",
    link: "/servicios/examen-escolar",
    image: "/images/examen-escolar.webp",
    alt: "Profesional realizando examen médico escolar a estudiante",
    metaDescription: "Ofrecemos exámenes médicos escolares completos para garantizar la salud y bienestar de los estudiantes."
  }
];
---

<div class="relative w-full h-[500px] overflow-hidden">
  <div class="absolute inset-0 flex transition-transform duration-500 ease-in-out" id="carousel">
    {slides.map((slide, index) => (
      <div class="w-full h-full flex-shrink-0 relative">
        <div class="absolute inset-0 bg-black/50 z-10"></div>
        <img 
          src={slide.image} 
          alt={slide.alt}
          class="w-full h-full object-cover"
          loading="eager"
          width="1920"
          height="1080"
        />
        <div class="absolute inset-0 z-20 flex flex-col items-center justify-center text-center px-4">
          <h2 class="text-4xl md:text-5xl font-bold text-white mb-4">{slide.title}</h2>
          <p class="text-xl text-white mb-8 max-w-2xl">{slide.description}</p>
          <a 
            href={slide.link}
            class="bg-accent hover:bg-accent-hover text-body-bg font-bold py-3 px-8 rounded-lg transition-colors duration-300"
            aria-label={`Ver más sobre ${slide.title}`}
          >
            Ver más
          </a>
        </div>
      </div>
    ))}
  </div>
  
  <!-- Controles del carrusel -->
  <button 
    class="absolute left-4 top-1/2 -translate-y-1/2 z-30 bg-white/30 hover:bg-white/50 text-white p-2 rounded-full transition-colors duration-300"
    id="prevBtn"
    aria-label="Imagen anterior"
  >
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
    </svg>
  </button>
  
  <button 
    class="absolute right-4 top-1/2 -translate-y-1/2 z-30 bg-white/30 hover:bg-white/50 text-white p-2 rounded-full transition-colors duration-300"
    id="nextBtn"
    aria-label="Siguiente imagen"
  >
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
    </svg>
  </button>

  <!-- Indicadores -->
  <div class="absolute bottom-4 left-1/2 -translate-x-1/2 z-30 flex space-x-2">
    {slides.map((_, index) => (
      <button 
        class="w-3 h-3 rounded-full bg-white/50 hover:bg-white transition-colors duration-300"
        data-index={index}
        aria-label={`Ir a imagen ${index + 1}`}
      ></button>
    ))}
  </div>
</div>

<script>
  // Verificar que los elementos existen antes de usarlos
  const carousel = document.getElementById('carousel');
  const prevBtn = document.getElementById('prevBtn');
  const nextBtn = document.getElementById('nextBtn');
  const indicators = document.querySelectorAll('[data-index]');

  if (carousel && prevBtn && nextBtn) {
    let currentSlide = 0;
    const slides = document.querySelectorAll('#carousel > div');

    function updateCarousel() {
      if (carousel) {
        carousel.style.transform = `translateX(-${currentSlide * 100}%)`;
        indicators.forEach((indicator, index) => {
          indicator.classList.toggle('bg-white', index === currentSlide);
          indicator.classList.toggle('bg-white/50', index !== currentSlide);
        });
      }
    }

    function nextSlide() {
      currentSlide = (currentSlide + 1) % slides.length;
      updateCarousel();
    }

    function prevSlide() {
      currentSlide = (currentSlide - 1 + slides.length) % slides.length;
      updateCarousel();
    }

    // Event listeners
    prevBtn.addEventListener('click', prevSlide);
    nextBtn.addEventListener('click', nextSlide);

    indicators.forEach((indicator, index) => {
      indicator.addEventListener('click', () => {
        currentSlide = index;
        updateCarousel();
      });
    });

    // Auto-advance
    setInterval(nextSlide, 5000);
  }
</script>

<style>
  #carousel > div {
    width: 100%;
    height: 100%;
  }
</style> 